# frozen_string_literal: true

require "matrix"

module Steersuite # :nodoc:
  SteersimResult = Struct.new(:filename, :object_type, :object_info,
                              :parameter, :agent_data) do
    def to_file(fd)
      case fd
      when String
        fn = File.join(fd, "#{filename}.bin")
        SteersimBinHandler.new(fn, self).writebin
      when IO, StringIO
        pp 'writing to io'
        SteersimBinHandler.new(nil, self).writebin(fd)
      end
    end

    def self.from_file(file)
      case file
      when String
        SteersimBinHandler.new(file).readbin
      when IO
        SteersimBinHandler.new.readbin(file)
      else
        raise "Unknown file type"
      end
    end
  end

  unless defined? TrajectoryList
    class TrajectoryList < Array # :nodoc:
      def rawdata
        flat_map(&:entries)
      end
    end

  end

  ##
  # A class to handle the binary file generated by SteerSim
  class SteersimBinHandler
    def initialize(filename = nil, data = nil)
      @filename = filename
      @data = data
    end

    def readsection(data_format, io)
      size = io.read(4).unpack1("l")
      io.read(size * 4).unpack(data_format)
    end

    def writesection(data, data_format, io)
      size = data.size
      io.write([size].pack("l"))
      io.write(data.pack(data_format))
    end

    def readbin(io = nil)
      io ||= File.open(@filename, "rb")
      filename = nil
      object_type = readsection("l*", io)
      object_info = readsection("f*", io)
      parameter = readsection("f*", io)
      agent_loc = []
      agent_loc << readsection("f*", io) until io.eof?

      agent_data = agent_loc.map do |pos|
        traj = pos.each_slice(2).map(&:itself)
        TrajectoryList.new(traj)
      end

      @data = SteersimResult.new(filename, object_type, object_info,
                                 parameter, agent_data)
    end

    def writebin(io = nil)
      pp io
      raise "No data to write" unless @data
      raise "No filename to write" unless io || @filename

      io ||= File.open(@filename, "wb")
      writesection(@data.object_type, "l*", io)
      writesection(@data.object_info, "f*", io)
      writesection(@data.parameter, "f*", io)
      @data.agent_data.each do |t|
        writesection(t.rawdata, "f*", io)
      end
      pp io.string
      io.close
    end
  end
  private_constant :SteersimBinHandler
end
